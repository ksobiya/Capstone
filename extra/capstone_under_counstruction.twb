<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.23.1214.0339                               -->
<workbook original-version='18.1' source-build='2022.3.12 (20223.23.1214.0339)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='country_pop_total' inline='true' name='federated.1kk6wqw0qzao601cr494m1tmnuhc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_pop_total' name='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq'>
            <connection class='textscan' directory='C:/Users/ksobi/Documents/NSS/Python/Projects/immigrants/data/under_constructtion_csv' filename='country_pop_total.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq' name='country_by_dest.csv' table='[country_by_dest#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Year' ordinal='1' />
            <column datatype='string' name='Departure Country' ordinal='2' />
            <column datatype='real' name='Total Emigrants' ordinal='3' />
            <column datatype='string' name='Destination Country' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq' name='country_pop_total.csv' table='[country_pop_total#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='real' name='M/F pop 2015' ordinal='2' />
              <column datatype='real' name='M/F pop 2019' ordinal='3' />
              <column datatype='real' name='M/F pop 2015_per_100k' ordinal='4' />
              <column datatype='real' name='M/F pop 2019_per_100k' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq' name='country_by_dest.csv' table='[country_by_dest#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='string' name='Departure Country' ordinal='2' />
              <column datatype='real' name='Total Emigrants' ordinal='3' />
              <column datatype='string' name='Destination Country' ordinal='4' />
            </columns>
          </relation>
          <relation connection='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq' name='gp_unemp_dept_ctry1.csv' table='[gp_unemp_dept_ctry1#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Year' ordinal='1' />
              <column datatype='string' name='Departure Country' ordinal='2' />
              <column datatype='real' name='Total Emigrants' ordinal='3' />
              <column datatype='string' name='Country_code' ordinal='4' />
              <column datatype='real' name='Unemployment %' ordinal='5' />
              <column datatype='string' name='gp_rank' ordinal='6' />
            </columns>
          </relation>
          <relation connection='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq' name='mk_glob_p.csv' table='[mk_glob_p#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='risk_in_2021_22country' ordinal='1' />
              <column datatype='string' name='ISO3' ordinal='2' />
              <column datatype='integer' name='riskrank' ordinal='3' />
              <column datatype='integer' name='1 in X chance' ordinal='4' />
              <column datatype='integer' name='anymk.ongoing' ordinal='5' />
              <column datatype='integer' name='anymk.ever' ordinal='6' />
              <column datatype='real' name='imr.sqrt' ordinal='7' />
              <column datatype='real' name='gdppcgrowth.combined' ordinal='8' />
              <column datatype='real' name='battledeaths.ln' ordinal='9' />
              <column datatype='integer' name='religiousfreedom' ordinal='10' />
              <column datatype='real' name='battledeaths' ordinal='11' />
              <column datatype='real' name='percent_chance_of_mass_killing' ordinal='12' />
              <column datatype='real' name='imr_per_1000' ordinal='13' />
              <column datatype='string' name='country' ordinal='14' />
              <column datatype='string' name='gp_rank_2015' ordinal='15' />
              <column datatype='string' name='gp_rank_2019' ordinal='16' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[1 in X chance]' value='[mk_glob_p.csv].[1 in X chance]' />
          <map key='[Country]' value='[country_pop_total.csv].[Country]' />
          <map key='[Country_code]' value='[gp_unemp_dept_ctry1.csv].[Country_code]' />
          <map key='[Departure Country (gp_unemp_dept_ctry1.csv)]' value='[gp_unemp_dept_ctry1.csv].[Departure Country]' />
          <map key='[Departure Country]' value='[country_by_dest.csv].[Departure Country]' />
          <map key='[Destination Country]' value='[country_by_dest.csv].[Destination Country]' />
          <map key='[F1 (country_by_dest.csv)]' value='[country_by_dest.csv].[F1]' />
          <map key='[F1 (gp_unemp_dept_ctry1.csv)]' value='[gp_unemp_dept_ctry1.csv].[F1]' />
          <map key='[F1 (mk_glob_p.csv)]' value='[mk_glob_p.csv].[F1]' />
          <map key='[F1]' value='[country_pop_total.csv].[F1]' />
          <map key='[ISO3]' value='[mk_glob_p.csv].[ISO3]' />
          <map key='[M/F pop 2015]' value='[country_pop_total.csv].[M/F pop 2015]' />
          <map key='[M/F pop 2015_per_100k]' value='[country_pop_total.csv].[M/F pop 2015_per_100k]' />
          <map key='[M/F pop 2019]' value='[country_pop_total.csv].[M/F pop 2019]' />
          <map key='[M/F pop 2019_per_100k]' value='[country_pop_total.csv].[M/F pop 2019_per_100k]' />
          <map key='[Total Emigrants (gp_unemp_dept_ctry1.csv)]' value='[gp_unemp_dept_ctry1.csv].[Total Emigrants]' />
          <map key='[Total Emigrants]' value='[country_by_dest.csv].[Total Emigrants]' />
          <map key='[Unemployment %]' value='[gp_unemp_dept_ctry1.csv].[Unemployment %]' />
          <map key='[Year (gp_unemp_dept_ctry1.csv)]' value='[gp_unemp_dept_ctry1.csv].[Year]' />
          <map key='[Year]' value='[country_by_dest.csv].[Year]' />
          <map key='[anymk.ever]' value='[mk_glob_p.csv].[anymk.ever]' />
          <map key='[anymk.ongoing]' value='[mk_glob_p.csv].[anymk.ongoing]' />
          <map key='[battledeaths.ln]' value='[mk_glob_p.csv].[battledeaths.ln]' />
          <map key='[battledeaths]' value='[mk_glob_p.csv].[battledeaths]' />
          <map key='[country]' value='[mk_glob_p.csv].[country]' />
          <map key='[gdppcgrowth.combined]' value='[mk_glob_p.csv].[gdppcgrowth.combined]' />
          <map key='[gp_rank]' value='[gp_unemp_dept_ctry1.csv].[gp_rank]' />
          <map key='[gp_rank_2015]' value='[mk_glob_p.csv].[gp_rank_2015]' />
          <map key='[gp_rank_2019]' value='[mk_glob_p.csv].[gp_rank_2019]' />
          <map key='[imr.sqrt]' value='[mk_glob_p.csv].[imr.sqrt]' />
          <map key='[imr_per_1000]' value='[mk_glob_p.csv].[imr_per_1000]' />
          <map key='[percent_chance_of_mass_killing]' value='[mk_glob_p.csv].[percent_chance_of_mass_killing]' />
          <map key='[religiousfreedom]' value='[mk_glob_p.csv].[religiousfreedom]' />
          <map key='[risk_in_2021_22country]' value='[mk_glob_p.csv].[risk_in_2021_22country]' />
          <map key='[riskrank]' value='[mk_glob_p.csv].[riskrank]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_pop_total.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_by_dest.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[gp_unemp_dept_ctry1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[country_pop_total.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_pop_total.csv_629926E99E734282A4EBD931D41B91D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[country_pop_total.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_pop_total.csv_629926E99E734282A4EBD931D41B91D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>M/F pop 2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[M/F pop 2015]</local-name>
            <parent-name>[country_pop_total.csv]</parent-name>
            <remote-alias>M/F pop 2015</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_pop_total.csv_629926E99E734282A4EBD931D41B91D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>M/F pop 2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[M/F pop 2019]</local-name>
            <parent-name>[country_pop_total.csv]</parent-name>
            <remote-alias>M/F pop 2019</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_pop_total.csv_629926E99E734282A4EBD931D41B91D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>M/F pop 2015_per_100k</remote-name>
            <remote-type>5</remote-type>
            <local-name>[M/F pop 2015_per_100k]</local-name>
            <parent-name>[country_pop_total.csv]</parent-name>
            <remote-alias>M/F pop 2015_per_100k</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_pop_total.csv_629926E99E734282A4EBD931D41B91D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>M/F pop 2019_per_100k</remote-name>
            <remote-type>5</remote-type>
            <local-name>[M/F pop 2019_per_100k]</local-name>
            <parent-name>[country_pop_total.csv]</parent-name>
            <remote-alias>M/F pop 2019_per_100k</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_pop_total.csv_629926E99E734282A4EBD931D41B91D3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (country_by_dest.csv)]</local-name>
            <parent-name>[country_by_dest.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_by_dest.csv_95CA4C1FAB73441FB772E25A0403DFD8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[country_by_dest.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_by_dest.csv_95CA4C1FAB73441FB772E25A0403DFD8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Departure Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Departure Country]</local-name>
            <parent-name>[country_by_dest.csv]</parent-name>
            <remote-alias>Departure Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_by_dest.csv_95CA4C1FAB73441FB772E25A0403DFD8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Emigrants</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Emigrants]</local-name>
            <parent-name>[country_by_dest.csv]</parent-name>
            <remote-alias>Total Emigrants</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_by_dest.csv_95CA4C1FAB73441FB772E25A0403DFD8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Destination Country]</local-name>
            <parent-name>[country_by_dest.csv]</parent-name>
            <remote-alias>Destination Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[country_by_dest.csv_95CA4C1FAB73441FB772E25A0403DFD8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (gp_unemp_dept_ctry1.csv)]</local-name>
            <parent-name>[gp_unemp_dept_ctry1.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (gp_unemp_dept_ctry1.csv)]</local-name>
            <parent-name>[gp_unemp_dept_ctry1.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Departure Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Departure Country (gp_unemp_dept_ctry1.csv)]</local-name>
            <parent-name>[gp_unemp_dept_ctry1.csv]</parent-name>
            <remote-alias>Departure Country</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Emigrants</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Emigrants (gp_unemp_dept_ctry1.csv)]</local-name>
            <parent-name>[gp_unemp_dept_ctry1.csv]</parent-name>
            <remote-alias>Total Emigrants</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[gp_unemp_dept_ctry1.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment %]</local-name>
            <parent-name>[gp_unemp_dept_ctry1.csv]</parent-name>
            <remote-alias>Unemployment %</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gp_rank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gp_rank]</local-name>
            <parent-name>[gp_unemp_dept_ctry1.csv]</parent-name>
            <remote-alias>gp_rank</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (mk_glob_p.csv)]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>risk_in_2021_22country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[risk_in_2021_22country]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>risk_in_2021_22country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISO3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISO3]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>ISO3</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>riskrank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[riskrank]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>riskrank</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1 in X chance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1 in X chance]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>1 in X chance</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>anymk.ongoing</remote-name>
            <remote-type>20</remote-type>
            <local-name>[anymk.ongoing]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>anymk.ongoing</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>anymk.ever</remote-name>
            <remote-type>20</remote-type>
            <local-name>[anymk.ever]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>anymk.ever</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imr.sqrt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[imr.sqrt]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>imr.sqrt</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdppcgrowth.combined</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdppcgrowth.combined]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>gdppcgrowth.combined</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>battledeaths.ln</remote-name>
            <remote-type>5</remote-type>
            <local-name>[battledeaths.ln]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>battledeaths.ln</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>religiousfreedom</remote-name>
            <remote-type>20</remote-type>
            <local-name>[religiousfreedom]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>religiousfreedom</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>battledeaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[battledeaths]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>battledeaths</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_chance_of_mass_killing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_chance_of_mass_killing]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>percent_chance_of_mass_killing</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>imr_per_1000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[imr_per_1000]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>imr_per_1000</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gp_rank_2015</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gp_rank_2015]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>gp_rank_2015</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gp_rank_2019</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gp_rank_2019]</local-name>
            <parent-name>[mk_glob_p.csv]</parent-name>
            <remote-alias>gp_rank_2019</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Departure Country (gp unemp dept ctry1.csv)' datatype='string' name='[Departure Country (gp_unemp_dept_ctry1.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Departure Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Destination Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='F1 (country by dest.csv)' datatype='integer' name='[F1 (country_by_dest.csv)]' role='measure' type='quantitative' />
      <column caption='F1 (gp unemp dept ctry1.csv)' datatype='integer' name='[F1 (gp_unemp_dept_ctry1.csv)]' role='measure' type='quantitative' />
      <column caption='F1 (mk glob p.csv)' datatype='integer' name='[F1 (mk_glob_p.csv)]' role='measure' type='quantitative' />
      <column caption='Iso3' datatype='string' name='[ISO3]' role='dimension' type='nominal' />
      <column caption='M/F pop 2015 per 100k' datatype='real' name='[M/F pop 2015_per_100k]' role='measure' type='quantitative' />
      <column caption='M/F pop 2019 per 100k' datatype='real' name='[M/F pop 2019_per_100k]' role='measure' type='quantitative' />
      <column caption='Total Emigrants (gp unemp dept ctry1.csv)' datatype='real' name='[Total Emigrants (gp_unemp_dept_ctry1.csv)]' role='measure' type='quantitative' />
      <column caption='Year (gp unemp dept ctry1.csv)' datatype='integer' name='[Year (gp_unemp_dept_ctry1.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='country_by_dest.csv' datatype='table' name='[__tableau_internal_object_id__].[country_by_dest.csv_95CA4C1FAB73441FB772E25A0403DFD8]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='country_pop_total.csv' datatype='table' name='[__tableau_internal_object_id__].[country_pop_total.csv_629926E99E734282A4EBD931D41B91D3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='gp_unemp_dept_ctry1.csv' datatype='table' name='[__tableau_internal_object_id__].[gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='mk_glob_p.csv' datatype='table' name='[__tableau_internal_object_id__].[mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72]' role='measure' type='quantitative' />
      <column caption='Anymk.Ever' datatype='integer' name='[anymk.ever]' role='measure' type='quantitative' />
      <column caption='Anymk.Ongoing' datatype='integer' name='[anymk.ongoing]' role='measure' type='quantitative' />
      <column caption='Battledeaths.Ln' datatype='real' name='[battledeaths.ln]' role='measure' type='quantitative' />
      <column caption='Battledeaths' datatype='real' name='[battledeaths]' role='measure' type='quantitative' />
      <column caption='Country1' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gdppcgrowth.Combined' datatype='real' name='[gdppcgrowth.combined]' role='measure' type='quantitative' />
      <column caption='Gp Rank' datatype='string' name='[gp_rank]' role='dimension' type='nominal' />
      <column caption='Gp Rank 2015' datatype='string' name='[gp_rank_2015]' role='dimension' type='nominal' />
      <column caption='Gp Rank 2019' datatype='string' name='[gp_rank_2019]' role='dimension' type='nominal' />
      <column caption='Imr.Sqrt' datatype='real' name='[imr.sqrt]' role='measure' type='quantitative' />
      <column caption='Imr Per 1000' datatype='real' name='[imr_per_1000]' role='measure' type='quantitative' />
      <column caption='Percent Chance Of Mass Killing' datatype='real' name='[percent_chance_of_mass_killing]' role='measure' type='quantitative' />
      <column caption='Religiousfreedom' datatype='integer' name='[religiousfreedom]' role='measure' type='quantitative' />
      <column caption='Risk In 2021 22Country' datatype='string' name='[risk_in_2021_22country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Riskrank' datatype='integer' name='[riskrank]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire, Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dem. People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Réunion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Micronesia (Fed. States of)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='country_by_dest.csv' id='country_by_dest.csv_95CA4C1FAB73441FB772E25A0403DFD8'>
            <properties context=''>
              <relation connection='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq' name='country_by_dest.csv' table='[country_by_dest#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='string' name='Departure Country' ordinal='2' />
                  <column datatype='real' name='Total Emigrants' ordinal='3' />
                  <column datatype='string' name='Destination Country' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='country_pop_total.csv' id='country_pop_total.csv_629926E99E734282A4EBD931D41B91D3'>
            <properties context=''>
              <relation connection='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq' name='country_pop_total.csv' table='[country_pop_total#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='M/F pop 2015' ordinal='2' />
                  <column datatype='real' name='M/F pop 2019' ordinal='3' />
                  <column datatype='real' name='M/F pop 2015_per_100k' ordinal='4' />
                  <column datatype='real' name='M/F pop 2019_per_100k' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='gp_unemp_dept_ctry1.csv' id='gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE'>
            <properties context=''>
              <relation connection='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq' name='gp_unemp_dept_ctry1.csv' table='[gp_unemp_dept_ctry1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='string' name='Departure Country' ordinal='2' />
                  <column datatype='real' name='Total Emigrants' ordinal='3' />
                  <column datatype='string' name='Country_code' ordinal='4' />
                  <column datatype='real' name='Unemployment %' ordinal='5' />
                  <column datatype='string' name='gp_rank' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='mk_glob_p.csv' id='mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72'>
            <properties context=''>
              <relation connection='textscan.1nydeq60y3zz7m1gd9ykp1nrx2qq' name='mk_glob_p.csv' table='[mk_glob_p#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='risk_in_2021_22country' ordinal='1' />
                  <column datatype='string' name='ISO3' ordinal='2' />
                  <column datatype='integer' name='riskrank' ordinal='3' />
                  <column datatype='integer' name='1 in X chance' ordinal='4' />
                  <column datatype='integer' name='anymk.ongoing' ordinal='5' />
                  <column datatype='integer' name='anymk.ever' ordinal='6' />
                  <column datatype='real' name='imr.sqrt' ordinal='7' />
                  <column datatype='real' name='gdppcgrowth.combined' ordinal='8' />
                  <column datatype='real' name='battledeaths.ln' ordinal='9' />
                  <column datatype='integer' name='religiousfreedom' ordinal='10' />
                  <column datatype='real' name='battledeaths' ordinal='11' />
                  <column datatype='real' name='percent_chance_of_mass_killing' ordinal='12' />
                  <column datatype='real' name='imr_per_1000' ordinal='13' />
                  <column datatype='string' name='country' ordinal='14' />
                  <column datatype='string' name='gp_rank_2015' ordinal='15' />
                  <column datatype='string' name='gp_rank_2019' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[F1]' />
              <expression op='[F1 (country_by_dest.csv)]' />
            </expression>
            <first-end-point object-id='country_pop_total.csv_629926E99E734282A4EBD931D41B91D3' />
            <second-end-point object-id='country_by_dest.csv_95CA4C1FAB73441FB772E25A0403DFD8' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[F1]' />
              <expression op='[F1 (gp_unemp_dept_ctry1.csv)]' />
            </expression>
            <first-end-point object-id='country_pop_total.csv_629926E99E734282A4EBD931D41B91D3' />
            <second-end-point object-id='gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[F1 (gp_unemp_dept_ctry1.csv)]' />
              <expression op='[F1 (mk_glob_p.csv)]' />
            </expression>
            <first-end-point object-id='gp_unemp_dept_ctry1.csv_7A46E6FA1A1E462CA1EA000F92278DDE' />
            <second-end-point object-id='mk_glob_p.csv_2BDD8C6412CB42B7BE7575F47F9B8E72' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_pop_total' name='federated.1kk6wqw0qzao601cr494m1tmnuhc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1kk6wqw0qzao601cr494m1tmnuhc'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[M/F pop 2015]' role='measure' type='quantitative' />
            <column datatype='real' name='[M/F pop 2019]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[M/F pop 2015]' derivation='Sum' name='[sum:M/F pop 2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[M/F pop 2019]' derivation='Sum' name='[sum:M/F pop 2019:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kk6wqw0qzao601cr494m1tmnuhc].[sum:M/F pop 2015:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1kk6wqw0qzao601cr494m1tmnuhc].[sum:M/F pop 2019:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
              <bucket>&quot;Bonaire, Sint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Channel Islands&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Côte d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Curaçao&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Dem. People&apos;s Republic of Korea&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Holy See&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Micronesia (Fed. States of)&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Republic of Korea&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Réunion&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;State of Palestine&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Viet Nam&quot;</bucket>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
              <bucket>&quot;Western Sahara&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[:Measure Names]</column>
            <column>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Country:nk]</column>
            <column>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Latitude (generated)]</column>
            <column>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Multiple Values]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Country:nk]' />
              <size column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.0648518800735474' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1kk6wqw0qzao601cr494m1tmnuhc].[:Measure Names] * [federated.1kk6wqw0qzao601cr494m1tmnuhc].[Latitude (generated)])</rows>
        <cols>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2A5295E0-576B-4C99-B77F-285809414754}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='country_pop_total' name='federated.1kk6wqw0qzao601cr494m1tmnuhc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1kk6wqw0qzao601cr494m1tmnuhc'>
            <column datatype='string' name='[Departure Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Destination Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Total Emigrants]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Departure Country]' derivation='None' name='[none:Departure Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Destination Country]' derivation='None' name='[none:Destination Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Emigrants]' derivation='Sum' name='[sum:Total Emigrants:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Year:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Departure Country:nk]' />
              <lod column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Destination Country:nk]' />
              <size column='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[sum:Total Emigrants:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Latitude (generated)]</rows>
        <cols>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F5B0F1B2-9D08-43AD-8E4E-43C5644D0B86}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Country:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[Multiple Values]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Country:nk]</field>
            <field>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[sum:M/F pop 2015:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E01DC4A0-0B09-4CD7-ACE5-24232DE4B0E4}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1kk6wqw0qzao601cr494m1tmnuhc].[sum:Total Emigrants:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kk6wqw0qzao601cr494m1tmnuhc].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D221D55E-D59E-41CD-9679-032BE59B8D98}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aYwkaXoe9sSdkXdWVlVXd0+fc197zN4HyV3SMsBTsgjJh0jDNgz6t2DA
      P2zD/mFbEGD/MGzYMCCAkA3LskTZtMgllyK5vFbcY3aXOzu7y5mds6d7+qgj7zsiI8I/op8v
      v/gyIiuruqq7KrseoNHdmRGREV+87/u996v1+/3INE3IGAwGME0TnuehWCwCADRNQ7fbhaZp
      iKIIuq6L78IwxHA4FP8HgCAIMBqNYFkWPM+DbdsYj8cAgGKxCMMwxLFRFKHf78OyLORyORw1
      xuMxDMOAruuJ3+W9j0YjhGF45L/7oNB1HYVC4VHfxqlCFEWYTqeC1mS4rguV1k3TNOE4TuIC
      pmlC0zT4vg/TNDEej+G6LizLShDKdDpFoVDAZDIRPxwEAUzThOu6MAxDMNN0OoWu6wCAXC4H
      XdcRRRHCMISu6/B9H9PpFNPpFPl8HpqmzT1YFEXQNA2apmE6nc49TBYcxxHnZn3f7XZPHBPY
      tg3btjPv+wxJ+L6PyWQCz/MErQExvbmum7qOcxSkaZqQko7jYDweCyluGAaCIAAQE+RkMkE+
      nxcvajQaAQAMw4CmabBtG0EQwPd95HI5DIdDsYMEQZAgaMMw4Pu+2C10XRc3PB6PBUfrug7X
      dRNMuwwWEZGu6yiXy+h0Ooii6EDXPU5MJhM4jgPLsh71rZx4TKdT9Pv9xPvL5XJwHGdu15ex
      rwjN5XKIogidTkcQrW3b8DwPYRii0WjMnUNmcBwH+XweQEzEZApd1zGdTtHr9WAYBiqVCqbT
      KYCYsXq9HgAIJiDTATN1i9c6KmiaBl3XE7/1KMHdlsJi0Ut83KESv6ZpKJVKS2kI+r5H3Eex
      WBSS13VdFAoFQdyapsE0Tei6DsuyxA/L3MhjKPEp0UlwaS84DMNUguS1jhJHzVAPijAMUSwW
      oes6RqPRidqZThKCIMBwOBTqq6ZpKJfLS9PHUkeR4HjR6XQqDEcartSzebzruolrOI6TUFvy
      +Tz6/b4gcF3Xoes6wjBMqFoEbQaqTcdBELxnqnKPEtPpFMPhEKVSKeFcOMM8qD0A2FflUTHH
      ADRms6RsFEXwPE9ITEopYLGerYJ6Nwk5l8shl8thPB7Dtm0Mh0PhbTIMA4ZhCHXAtu1jUQkW
      GcoPE1wTetJUYfKoQcfFSYBM/K7rHtiLmKDwwWCQkH40cMMwFCqOpmnI5/NC/TksSGjq33zZ
      pVLpga5/2Hs6atXqMOBOaFnWiTSATwrxR1GUcHc6jnNgAZZ42+rJw+EQ4/FYuEbL5fKhJSR1
      tPF4LJhnMplgOBwCiJmNBvajXGDGCx6FS5SS3zAMYWudhB3ppELW/QuFwqHoJsEAjuMIgiTC
      MBSemOFwuDAwQ/VpOp3CcRxxQ/QiMR4QhiEKhQI8zxMvfTAYiBcPxD5d7kaFQgGapmEymYhd
      iIRBw/qowOd9FHBdF8PhEJ7nYTKZwDTNE2WYnyTQ30+19bA7d+IsSvssAgjDUBBIWqAKmOmt
      mqYJfcz3fRFYC8NQqDfT6TTxe5R4vu8LV2g+n0cQBBgMBkIVM00Tk8kEQCwtH2RnUqHreqog
      OC7I9pNlWSgWixgOh8jn8ydCHTupME1TSH/Lsg4k/aMoEm56Xf6QEV0ZJHZGb9vtNnzfT71w
      q9USATPqrjRaGU+QvUWqm5TnUK/TNA2O48DzPBGDYERZZjjP85Z++GXwMI08MjUQ74KTyQS1
      Wk2s9xnmEQQBut0uAIiUnIMKQGYtiBWmdFdhmiZKpRJGo5HYIQzDQLPZFK7QwWAAIJbG0+lU
      eG2AWE+T/diTyUQczwewLEukP9DTA0BEkintgZhpfN+H67oiNnHUhPKwjeEgCGBZFmzbhu/7
      D233Oa0YDoeCRizLOjDx08M4Go1mDEDdXAY9PiR8gurJaDSC53mYTqfCNQogcZ1CoYDRaCTU
      IgDiHMdxEAQBisWi0P3l+6DqpD6gZVni3OFwiOFwmGCSB4VhGA81+BQEgRAcaQl7Z0hCVhsP
      6iKOokjQy2QyiRlAdScRqh5KgmCIPooiDAYDBEEgpBiQ9M1qmoZarSa+Y8qBnG8kE7hMdFRF
      ZFcpd4lWqyWYKggCjMfjI/Hc8DcetvrB4KKaKXuGJKbTqVDBGSc66PkyjYmzS6WSyDwkATAl
      WtWxSfzyhSjB5P8DM4KiJ4fXJiGrgQuViKn/81xN04R3iIwIzGyBo5Da3IWOWw3iGhNBEIj8
      qDOko9/vi/csv/9lodqvOjCTypVKRWzDpmkKY7ZUKol0B2AmpWX1hMlthKqS6LoujOFarQYg
      NnbVNGSVoz3PEzGCNAOdCwHM4hZqVuBhoOs68vn8gbNODwLeNz1bfKFZToYzxBqDbduCHg6y
      VtPpVHgTacsmqI06f6lUQrlcFvk5jAIzRUL+Q8gEl7U15fN54eoks6jql2VZqFarQrejT5zH
      yn/kBCiCdsmDEJHrulhbWxPPf1Bf/N3m8kYs4yYUDizQOY3Jb2nevaMGBTHfiWqfZiEMQ7Tb
      7UQ6/3Q6nc8GzeVyc1u/7AECkEn88mdpN5Zm0GqaNqf2dLtdoavJXiH5t+R/py0AXbqHfRlk
      sFwud2AGuN3oL3Uc3ctcb+42h9naH+RZHwRcJ8/zhFew3+/D9/1juR+uGWtOJpPJUjt+2vdR
      FEEbj8fRfts8uQWYFbswUqsavDye6RPFYjFVl6b3hufJniC6Shl0S7t5OV0hjbHk+6lUKgcO
      lDAYx2fodrtH/kK5Lizy0XUdvV5PeLlOQxxgMpnA9334vg/HcURlHzN6aVseNch4QRAgDEMR
      X1q0Zr1eL+GCBwBzMBiIk7MuILsv5fz9LEnFz6bTKdrtNorF4pyxKzOOrM4AST2PqpKcNs1d
      oVQqYTweJ66l3kculxOVVQchKM/zhIeq0+ksfd5BwPJPGr+WZYlS0pNK/PKOTPWV74+M0O12
      j43wCVYR0mFAz2ClUsl0Xsg0RsFqsrJLlvC+788lpTH3gkiLG6Qxg23bCQKlHeG6buIa6i5E
      qV4ulzGZTESFFO/J8zzhWh0MBqlqGO+bxvxBiIppGyRK2f12lJCDXpPJJJEqchLheR4oNEk7
      9NL1+310u13k83k0m02sr6+j3+8Lpj5uhiiXy3Fw677dJguSLIPZjKII3W5XeH0mkwlGo5GI
      ADPZrFAoCH8/L5gGuZhF9vwQVJtc10WlUhEZob1eT3RBkAk1iuKOEUDMTKwhYGqFaZqi3lhd
      EJ5/UNWFi8l7kuudjxMs3j6pGI/HIu5DY53vgbp/tVoV0vXWrVtwXRfVahX5fF7Efw4auaVa
      lcvlFp5LIdlqtQDMVEsWFFWrVbRaLZFWA9xPhmO9rnzxIAjQbrcBAOVyWRAfA0/8EYLpA5SW
      TFUdDAYivsDoGwARCSaBUuVgza8cN7AsS0SbmSjG1A16qZhpmpbMR+Y+CAzDQLVaFWvBxT2u
      muF8Pn8sLWGOArKuzee/d++eqKFOu+9ut4t6vS7WbTAYiA4haiHVfiDTLVof0pFt27AsS+zg
      g8EAvu8LYZ7L5RJ2gKlKSvmmyMmdTkcQkGVZIiWax/JHmZqQy+VQr9fFNfkbJPDRaCS2I0pX
      blG+72M8HoubVe0MnienRXOHGgwGCe8R7+8whRJcE6Zg8+8HQZpBz7Y0xxlveBDw/fM9sksI
      Dd7xeCxya+RERwodqrg8n0loQRCkOidkmuE7Y54Y128wGAjpTpW62+1C13Xkcrk5IeV5HhqN
      htiJeL+AwgDy3/INARB6HgmsXq8niIr5PZZlJfTuNMjJb+RUGrfcIfiw/J5GT7lcnrtPLhrz
      jmir8JhutwvXdQ+sXjC4d1RRYb5sei1s2z7RKc9cf8dxhA1E4cXUber8lM6q0Mu67mQyQavV
      EgXs8vG9Xg/j8Ri1Wk203CHhU1hSklM9BmKmW9TfqdPpwHXdBO2k1gTLkkp9IOaqyARKNYUq
      Ct2mbHkig/oXbQ1Z/ZLdrbyebHirvYT4Gbmf9obcYoWgDi93rdgPImVWKtZ/UJCBH1XRzUFA
      JwDV0k6nI8pkubaVSgXtdlswAN9NqVRCt9ude16ZlnzfR6PRQLFYnEuVoYeJv9Xv9xOqi+rO
      BJDpDSSiKJqzFU3eXFqASb5xHtNutwUDyARJvVzeMYIgwN7engh2ydud3GVOVmd4vclkIrhc
      ZsZ+vy8WVb5fGtCaFhfrp2WHMit1WX2bzMcdSE7MOyhoWJ8GwifYiMDzPPT7fZHCkpY1rEbl
      ea78GZAeNO33+zAMQ0hn3/dRrVaFgd1ut48021eGuchDovr6ZeKWwe0pTY+VdxDZI8NMTlUy
      8P/M60lbbBm6rqNarYptVNb/s56NvUL3K6dcFIg7KE5ri0OqtkB61B6YF5hkGrk/lKpVqGvB
      Gg9eg04RtR7kKGEYRjoDMAEOgDAs1SACH0R9iCyk2RaLCIs7jLxQ8n3Jx9HWoPQYj8fCXUom
      kiUPXXZ09WaBht5REO5J9fAsAjuu0SmRFfhkrMeyrASRU2Xkrkw3e1bhFY91XRftdjtBdzK9
      UCWVNQaeux/orQyCIHa5A7O8+1wuh1KphEKhICptHMdJ6PFq1FZGmrROUx0WRZtlOI4jDKFC
      obBvgIhRSBI5F50qmhpf2M8WYEvCrFSLReDLZ8nesvYD9W35Pvl3r9d7aJmiFB7T6RTdbleo
      I9MQ+NEH7cSxbFQse+VyuVxCeEwmE9i2jY2NjbnU+0KhANd10el00O12herJ3SeN8dLUdrlO
      JUu4RtGst1QQBPEOIN8kG97SWDQMY65YZtngksqdWeqErLrQNmB0mv7fZbo18Dq6rguDHJhV
      kDmOg16vJwzb/VyP7IF6GN2fkuYg/m6ZyBn7oBeMhED34cNQpxj9lzvT6RqwVXPFu6Wjw/f9
      ueekGsp33263UavVEm31gVjQNBoNUVWoPptKN2kCWFWx5WuknU+aNuUPgVhy5fN50dufeTBp
      hvFhkHWuzCClUgm9Xk/4bOVaBBXkem6LagtFYFZyyB1hWSKim3IymYiXvR/oiSIxHCR2EASB
      yFli20hZfyZjd7vdOe/aUYNODKo2hK4B6+VZu3kGSQGg2WwmdijZG0chIq8h35Us9VUsa3+p
      hJ+lpqswVY4zDEPk0zOay+8PGwiSiTGNkeRtnnnbAISuxvRaennk67KTgnxNwzCEG47MwHyi
      QqGwdDieW3lat4w02LYNx3EO7dsncSTyjjQd260RLtQL4h6Ou2kXbSQgaZwSXFNZMKn2Wto1
      adexdQ5bvzN2xGurv5UG1ajmZ/JOsF88AgB0lRg8z0On05nLspQlaxbSfoznqPqZbEukXZfJ
      a1SHJpNJapBDjkPQbqG/V2ZY3/fRbrcRRdGBAmKmaYqODfsxgTqY4TCQ66VjWybCvb1h4vvj
      bpbLIqSsTiEkNDkTczAYpEpxmTjppOBAlGazKYzdtPMWrXfWdzKdydfJul5qIEx+SH4m/1t1
      WRIyV6bp+2mGjNpoi9VnLINkvgmPHY/HQsXQNA2VSiVh0NIQliPK8v14nncgjwx1+dFotK8K
      ZFnWAwXL5DUA7hvqho6PP7MuJC6LQY4LcvS73+/PvWP5/VP1ke0tGeVyGf1+P+G8YFynWq2i
      1+uJ30iT6AfFfrtFmn1gqgekHaRePGtbyXKVZhm/qhWv6zpKpVKip5BpmoiiSBiTjADKswnU
      AFupVBK9YyhRKWWGw+GBcoPk7tT7nXPYFyeDknVtbU3YAQzyHaYHzrKgdKbgGAwGqZm5su5P
      1YUqq3qcnLIOzLSI4XAI3/f3zSw+CpC5ZEErP1NiB8iyoPmderJ6ruwG4yKwDfqi8UP8XC5w
      AGIiZ20CpY1s/Mlp1zJkVSgMQxG+Hw6Hh+q2vGw69FGlMrMWWX7W4/T6kPhlhwffnQrDMIRr
      mmppmnCkP58GrloLcFwlk2lIU7UFMwCzBU9TaeTP5KISWRKoxqkMLu5+tkOhUEjVbTmAw/M8
      ocMTKsPI1ysWi2LX4DbLF3cYnz5Vsqz7P45enrJAOS5EUezv59ouqkfWNC1R6SV3aAOAD3c9
      vPFhN3F8oVBI9PF51BFxCnHSu8kbkyGrLbL6Mp1OUS6XRVYg3aVyl175GsR+rf5s206dDCmD
      8QDeD4MvrVZLVBvRVsjn84I5OOVyMBgIY/kwi+Y4TmYUkzbIo3yxANDpDfDdN27jy598ailj
      nOoI10b+PO1ZWB1HqMdcXLdgmvH3tOXu3LmTSIijSpvl9lzWfbksZM1EpWvgfi5QVsfnLN29
      WCyKEUdyMyr5b9X4zAKl9X7Es0i94HRJ+fe4KzEYtZ902w80+uQWj+r3jxq2ZeLq+erS98KC
      Efndsy07C2BkRlLtIHn2MzBLX6HdxBpdgoY8Xe1pOA61KI0JRIIjXV2yZEtzHZFQmW7MDL00
      aaGen+U1AiDqRQ8CVZKrhJ3VkuUw5Xjy+blcTuS7yGvDLfVRw805ePLS5tLPKAusMAzxzbd2
      MZrG57LASIb6nrKe2bIs0cxgc3MT1WpVHNtutx/6bikLYyD53Gaa9ObfqiRnqgRTFBZtV4t2
      BRkPWiid5nnSNA2tVktkisq/+yCESm/MeDwWWYrLeogeJbI8ezI0TcOnn1wTx04mk7ldl4KG
      kpQRcvk3gFlfJ3a8yOfzIrEuCIKHNo+Z+r7qlJGFV+qgbPmB+Leclpr20Gk2A4/JYpRFVWPL
      PqDjOEItUV+0vN2R8JmUdViCNQwDhUIclWWe1EktZyTUdAaCqorsJSFYYy0b9mx8VSqVEEWR
      IHCmPsuDqdmwigVPamHTwwLfvboLUIDPlUQSabp7FEUijTgIAliOiygCAn8sXF3qCKVFKtBR
      eDjSDG8uML+TPVc0yB+UaGlsH9fEyqPEIiHDNVON++FwKApgCJmQec1qtSqq5WQByONGo1Gi
      Ble9nnwPRw352dR4BmnPBGatTNL8ueoNM/gRRRG+8r0b6I08/Ptfvi56xMhBpzTiXGY7XhZy
      Vl8aAwMQmZXALMFL7lTxIDisV+lhYb+1lndQoRLcT/5jerymaYkYiBqJZs/YTqcjDEt2uM5y
      C8vS+CiLjrIgC2Hau8ILxINkJljk02dQStd1/K3PVxBCg21GghDo8027hiwh6MpkwfphCIn5
      Smk7CfU91qUahoFerycMPpZcriIYe2HxfRZkzwgAUftBtcV13UTReaFQSLiroygSapHv+3jn
      bh+RpuFjT24mOoWn3R/tKbW9ZtZ98rxlPl90vnqsSa6gMacOEFAvQoRhCNsAgAg8XD5mkeUt
      X4Mem8Ok97quK1qxpIFGW6vVmrMFWHB9Erw3RwUapoZhoN1uL9XenSprGIYicEhvl5ziQIZQ
      /eiGYSCXy6Hf72MjH6BWqyV2jEXSXZ0AtJ+7XO6qwc/2O4/fq/TIz3XZKFAPSLuQfEPyv+WF
      kb9j+nEWwjA89GALumbVrZacTgaQ2/fxd+QxrKsCrj/dl6wuWyYOw3b43FHlpmU8Ttf1RJ12
      EASCiAuFAgqFAhqNBnZ2djJdwzIhs9fsfpkIsg2nEj+Q7dnj+WnX5fUSZy4KFKUZxPK/0zxA
      RJpNIIOusUajIVxly0LT0gfaZblm5Zd6VBNlTgp0XU902xiPx6mjr9LA3YMqj+oCpRCTd83R
      aIR+v49+v48fvb+Hd7ZHIt2E11SRpRqTftKqyvjnIHUQMvFn2bOapiXjAFlclaa+pF1MvRbd
      Yep10sAX5fs+BoNBYiFV0H5gQEUuvVv0G+oxq0T8MuTnWpSnpZ7z/u09VIs2ikEg3Jp8L2QA
      uQaAxN/v97HmBCjWi2L3oIopY5ExLhumsp3IiDSN6rTSWNWQJsNk0basrZhphgFPksv60nzF
      8rFpDyc3010G8rVbrZYYzbSoiF62I+SH2+83NE0TI3OOu8DkYSOXyyXaTS5j60RRhHvNAWrl
      mGG63S46nQ5KpZJoYai+Y8uyhO3Gc2QnCMtaF6WxyLuybFfIRCp/Jwe2eD5/j/9XGYlIs1ET
      q6KqNST6ZbaetIjsQSAvBH+72+1id3cXo9FIRKB5fao96tibg5YLZvUfOm1gjIM5+Ew6Y/e9
      ZfDytTocc9YQbH19HaVSKZX4oygSfUFHfog/+O4tFItFBEFsCFcqFWxsbIhocZYuniWwEnq6
      8vvq9ZZx3/NzMrZw2965cyfKsqazJKlslMjHqtfJ0r/SkMbR6rmmaWJ9fR0ARHG46kKT74FR
      ybl2ePcDefJvs5idhTanDb7v46233kK9Xke5XBbPx+YG+03JiaIIH374IWzbxvr6ulA7ZCJl
      NqzsUm6326KIqdVqJbpgaJomEuLS6ICErWoJ6rvPanJG1UmOYclpKfyedo2mzfK52HLFVC8I
      zHSqNO5U817SVChZh8vajtIeRj0/DbKnKS0fST5PXTi239M0LTFXStM0UavK708TKOVt20a7
      3UalUsFXX30Pv/z5Z0T9bVpLSRmapgkXJn37nueJtI/hcBgPlbufPsHdBgAajQaAWX2G/P4q
      lQq63S6q1eqccOMfRpFlNzXfr/oO5fet2nQciEHByHtJ6ypChtXu3r0bqcaCbEyQi2QrXd6S
      VM+KDPkmNU0TMwYajcahVA7TNMX0xjAM0Wg0MpPyZMaT3Xt8HhnsJx9FcV5/rVY70V2bVdAb
      8+23d/GJ6+vYOrchpCoLXTRNE2sng3MXZBVTXsderyfSyeU1lcGRSPz8K69+gJeu1nF5PQ6a
      sQSSDEj6SROk8ruUe8dm7V7smUS1WNM0fPDBB7h48aJQA9Pumb+nZ0n6NB0si9B5vMwg8jma
      pomAC70EaTejQmZMPuhoNBJEn5bfkbZAsgGvEj+3dv5W2uinkw4WA1VcO7HmzWYzFhS9CYJw
      vnMDq+xu374911KekNeD73gwCTAMkrOd6a2Joggff2oTmxVXSHHuPmkCVIaq23O3WaS6yXQH
      zHorqS0xCVVgJwZlq+qKqk5kSQB1S5OPo8SlzjUcDlPdm6oBnHaz9GrwYWWXnPw3/80FoI6Y
      pUeqKttpYoAoit2Ruq7jhcs1lIqzuQsAEITAP/inr+L19xuYTCZiZwjDEL/9F2+g1ffEmmqa
      htbAR4TZ+83n86JjG9Eb+Wi1k4ykaZrwPJ2vOshZs6S4MAzR6XREZHnReyAWMYoKeYcYjUYi
      ZUNeo0zBfe/evYh6lpooJKsv8mfy1sKbTwOP4TXpnmPfSHmai8wsWUY577NYLMK2bXS73dRO
      1Wm7waLP+DlHLbEDw2kAd7AgCMSoVX7GXKneyEfRtWBKY59arRZarRam0ykKhQIcx8HN3QH+
      m3/yLfzK557EL3/mKqIoEkJrkf2wu7sLx3Hguq5opsx70zQNGxsbiKJIDNM4TA1IEATY3d0V
      KfSu685dJ4oi0fqSke39YMoeERoNaU1u1R+S/047Rv6MEpYuOjadTUtkU3cZVarzIWXjKO18
      9dxFnwFxWq9t22i1WguN9ZMGChb1M1mtLedtoSP7vo+7d+8ihI53d31U9dhADYIA62UHX3zx
      Il66Wgcwm67ueZ6og0gDXaX0Nsm2pKzHVyoVNJvNA41QJd30ej1sbm6Kz5vNZmKWnO/7wgg/
      UCbBvXv3IrloQFYdVENSNUpU3TDrAeQFofSnzpgGegXUFO3UB8hgGHk3oR0jF9XL59EFytz1
      Wq12qpPkWKRCaSm/GxbBj8YT7LSHeGKjjDCcjYDi+nQ6HWha3PVju9mHa8az3TjNheCxcj+n
      BDQNN7b7yDsmtmquSHvhPWW5Z0k3e3t7ADBnwMu2He+dgdeD7DDacDiM2AOUxoPalDVLP+ON
      cOHkv+UHkf/m96wwS8tWpN65bO8YVY/nPcool8uitcl4PBZdj9VBy3T9sR3iaWYE3/fxZ99/
      D198+TIcx0lUaDGC/q23W3jlqU2U3aR7W+4M/dqtLj5xtSY8b2wsRtuBLWHSBOEPbzTxP/32
      9+E6Jv7rX/8s6qXZ+2ZtRhTNZwPzPZG+jqrnUhACX3n1Bs7V8vjcc+dg6rqOWq0mBpCNx2Mh
      odO8Q0B6JC6LWeQHko+PokhIFHUbZ5mhpmkikpjmpVrkkeLvmaYpGIodEKrVamKiIQAxoRKY
      zZ/imJ7TCD7bF1++DN/3E/n5XBvXdfGzH82j1+thd3eIjY0N8Y44HKTdbuNaOQ5ohWEI13Xx
      +s0BPvX0Bhxniu3t7UQbywV3BJUqDMNAsVhEs9lMvX+qykdZcvrBTg9f+ea7KOUdfPLpTWjj
      8Tji+NJbt26JZrAyA6QRn6Zpc16YLKTtDnxAeocYsYyiSOiI9Xpd6KCqSyvNeyPfC793XVcE
      dqgS1Gq1uXvpdrtz6dG5XO6h9eI/akwmE/R6PSHts94R148t1+VnbTQayOcLMG0bhhbHFMrl
      spDaDLLJ46Y47yuXy90Xbjre3+4JFSjt9zk3QL4fYFbwdJS5WkEI/N6rN7BZzeNzz5+bMYBM
      BPTfylE91YcuM8B+SDNS09yTnB7Pz1qtlpj7qqYzyOkYMtHLL9q2bTQaDdHZjRInrW6ZsQB2
      vOBvHEfHt4cBuoyp7jUajbiaz3HgBRpcSxMNf6n2hpoFO5dDOBkIFefewEC77+Ejl2Li1XUd
      o8BCvZKDFoWCcTh3zbIsdPojfPfdFn7mxc2F0pttFWWPjipwecxxzUMQexalJZA+6igNNET2
      2wEW+mG1WZSY3ddarRYmkwnq9brwIasuWV5T9RLJ12y322LQGpmaQx94LgNA7Lz8/Xe2MfYj
      Edk8jdIfmBn3VDEZ0PreO038/f/tz/HWrQZGoxE6nQ4sy8K/+PY97PQD7LUHwkVt2zaef6KM
      zz23jl6vh1KphFKphN3eGP40TKRX5HI5ISjKhRy+9NI54a1TjVI2ML5w4QLW19cXGq3lclm4
      eSuVCiqVypHuCGIHAGa+VjLAoh1A1vdUtxs/S4MqudU/MjihhY1bz507J4ZHZC7drcEAACAA
      SURBVHmIZLWM3oler5cIw9NtZxiGkGB8eVld8k4zqA6FYYidzhh/+oPb+JXPXoVrG+j3+zGh
      Wi6i6VioiEBsC93YHcGwbCAKca5swTE1obrK7sydrocgiHC+FgucZrOJYrGIS5cuiV2m0+mg
      UqkIQcv7kpFGB4z9yOWbjUYjUzU/SCAzsben1Vpm2QDqDcp/Zx2XdbOqzziKZjk5mhbnmdfr
      dYxGccVRGIZotVpz16JrNQxD9Ho9sf3SA1Kv12EYRkKHrVQqc10OVg3yuNv1ko2/+1PXxXst
      FAqYTCZYW6tA12PCp3pbq9WQy+1B13V895091PM6cF/wUO0hAxRMDZFjiHPDMEShUBCChUFG
      1izTXlChClLXdUX3QKqow+FQ0BYnGQGzxmVyr6O0a8pIMICcV5+W8syLZXl5+H3a/7OgBrR4
      PIcm93o9jMdjMXxCtk+4C9C3TLclJQbdta7rolwui3bd9PtzHteqg8IlS3DJGb7dkY//5V/+
      AH/zC0/jix8tY2trC51OB89s2ghNF940hO51EekWIkzQbDbjuoHibOaCpmm4cuVKYjCGZVmJ
      4YtRFHcSoeMhLRVH02aNjqmuMouXz8PqQdIOO4HLMyAWqehz8wHUHqEEA1+qQZvlJlW9M8uA
      x5KIWYQNzNq2sCEvt1XeF0P8MhzHSUyF7/f7yOVyp25i+zKQiUJVSZmaoMZuuHaGncdu18ML
      T16Ev9uGYei4udPBO7d28ezVLZTL5XjqThCimLMwmET4nW+9j49cq2PNjr04aoe5jY2NOSeJ
      nJ+jabNW69vb24mRtvIzjcdjEe2l8JO/l8sfwzCeBUHbg3GKNDtE3IdsA3Q6HeEDT5P0Mmfy
      BtKQlaaQdV1eSz6nUCggl8thd3dXHD8YDFCpVIQhS3eb3B2a1zIMA+vr64mXsOyudNoQRXFC
      HN29ABL10ru7uyJ/hi7utbU1aFrsCdINA4ZuwLYt4Zbk7lqr1cQ5N2/ehGbYeOdeH9fX47kN
      1OtbY2CjGEt2x3GWzsXhLr+3tyeImx4feohov9FTKdeZ9/t9UWsgq/AchjKdTjEej1NzhzzP
      Q+od7qfm7AdZEjHAxLRWORc8rUW2/Nvyv1n5Qx2fXg3mmstSjwEw9QWsmnFLcJ1l9y3XaDKZ
      CCN/Mpngt77+jlgvuoXzrgvHmbV+l9vVM8PTMAxcvXoV1UoJm5WcmLnA5gTv3WmJeA0LWZa9
      93K5jMuXL6NSqWC7G6HZ7mFnZ0cINrllT7lcFkzDwKXnebh9+zZarZZQqXK5HAaTEI1BnBgn
      d78D4hjHaDRKqkCyv3uR+rLIRlAxGo3g5vP4/Vdv4KvfuQFdA37xM9fw6ScrwlXHh5N/j6F4
      gi49OWEvzWNDJmN7kJPet/OoYJqmmO5Ju8d1XZFSwvLQX/3CdZE1qoKf2baNarWKbrcrMgOK
      xSIcx0G1UoZtmbh928Ob9zxc38xjd3cXz2yYojCnXq8nPGuMRDPnjA275PfG9or5nI5C3sUI
      Afb29mJCHgxw+fJlIeDy+Tyq1Spu3bqFyWQC3/dx8eJFhGGIZrMp4hFv3+ngxr0u/vYXrglm
      oVudOV8JFWgwGIg5UYukpVoplnUM8fp7u/iff+eHAHishv/0Vz+GZ5+ozf2G/LsqE8q/p6pM
      AMR84Aed1ngasdfq4ivfeAs//fwaut0uCsUSfvNr7+HnP/EEzldM4dVhm0gVlKpy4I8BQhqe
      uVwOhUIBnd4A3/vJbbx4qYIwDMWEnyAI0Ov1xDwASuO0CfA0VPmOWW88GAxwY8/D+YoBxzLg
      RwZM08KFzZpIZqR6xvnRTOajl8jzPHieJ9y5jGsMBgMMh0MUi0WR4j1XE6y6J9OgGsuL4Hke
      PmzcTzGIACaEfNgY4rlLa5nn7Re6l++V9+k4zqnN3XlQOKaGn//kJXQ6HVy8eBG+P8VPvXwR
      l85VkbfjXZHEn2ULkZgITdNEW5p+vy+IvODm8PT5Ev7otTv47AsXsb4+mxYvt6lhiovv+yiU
      Kviz1z9EueDgI5fiQJZctwvMIu9rJSCYjqHZJqLIwDSIEsYvk+gY4OQ1eqP4/ov3swdYw0wj
      mJmx/X5fDHlJ7IPy/N1FvtNlbAEeY5omnqi7XFGQA85XnNS8bTIX/5b1fn6uSn8GtU56n/7j
      AiX1ZDIR+VSmaeBTT2+gmIuNYXlXzBJepmmm7g4kHs4ZsCwTm+truLZVhm0kEyCZukLi5DT4
      7729g3/+52/hH/+rH2O3G+f3y9M8AQjbzQpHGI+GuHHjBvRgCD0YCunP++G7lumhO/AwGAeC
      2amSEXt7eyL2U61W491OflAaQIPBIJHvvwhyECtLr/z401v4Oz89we+/+j50Dfilzz6Jl65v
      Zqozqgqklkiq3zHI8rgyADAbDavWSRPy51mTNdNSkvm3aq85joOXr22IyS9Zu0vMMBYubmio
      FGxUCg4212LGkY9Tf2d9fV20tleH+PEZ2DuKxvHF9ULimYvFophjzORKdgvv9XowbSdpA/Am
      Op2OsOiXhfrgad4c2aOjEj//qG7LtHPk6wKxf3m/Jryrjn6/j3v37iVy87lejuOI9I9FkNdX
      9rTIOUXyscPhEL1eT7hKKTTb7fZcvyZd1zHxQ+gaYNy/jTTHx2QywWg0wvr6euK7SqWSEHCt
      Vgu7u7tiWg2bAMsxHtLvcDgUaTFU7VnIP8cAwKxbgBp4OCiyYglcQP4tS3ZKERK/fJx8vgzH
      ceammTxu4C7M3qr0hGmaJnr6c13lcVcARAas53kiUEhhQq9SWiCJurgsfBix5fhc13UxnU4T
      Xaen0yl2d3cTDMkcr/X1dVHkL0eSAYjofRiGwkso05OcEcCgG+MBHATi+z5yuRxs28bOzk46
      A0RRnIpMa/swXRL287mrhM1zKEWyGIDHyXBddykJ9zggiiL869few7NX1rG5Ngso0UMjj5Ml
      GDhqjwIYhoVnr24JN/Jv/cnr+MLLl/HEuXSHRZpgkiPQ9Cgxem+aJu7duxfna00iVAoObFNH
      p9NBuVwWtl63201lAvmeZVc8aZR5YrVaTdRDcPdSn3nOCJa/rFQqSxVSLMJ+58p/ZMNbPS/L
      RiDUutfHHS9criJnauh0Otjb28Pu7i6azebC2byapiFn6nBtI9Hg9m/91PPYqi/uKMeUBXlg
      Og1v2ml//N137+80ISLdhmXZ+IPvfICbOz1xHRI1vU9pv0Umkts2qrYPiVtW/VQGpWaTWemh
      6/GIUT5YWv9Gcp6qk6u6v2okqzpamsrDz+X7UT+n8SN7CB53sLCHrkj6y+XObUCS4KIoLp5Z
      r1UT0+CpsuwHNhzIgqZpePbaJizLwnu39/Bf/uaf4+/97PP49X/jOQBx0YtQufwQjqljMpnM
      SX8+V2fo449fu4NPP3sOF6qW6Fyn6zo8zxMtWviMb9/p4vr5Moz7j08XaLlcTt8B5IevVCqo
      1Wqps3BVj02WXi8/gHyuzJlpqo58rArDMLCxsXEqe3keB5gCzogrBRMNYqaisHWI2nGNx1Ov
      329u10Gg6zqeuhDnZVULNv7GK5fx5IUqRqMRdnZ2xHSZMIrwf/zRX2MaxDlA7OAs5/hYloVX
      39rF175/E1/59vuJbhb8m8/Gz66eK8HUk8Y23bNL1fqxd1C/3xduRxoZqtSXodoPZIq0NIpl
      DV4AB0q2Uu/nj159C1/6+LUHHtB9kkDPHVUXrjF1+9FoJNYrbU2pJ9NF2Gg0RPIYGwqrZaE0
      dHnu0olvIw9femkTCMcA3IQQ1TUN/8kvvhxrC1psuLL3D2lC13X81MtPoDv08ZnntsTOw+tw
      iIbsTLGMpEdxOp0Kb1GqEZwG3/fFwmiahp2dnQRx02cbRVGiECIN3HazCF61C9Rz19fXD2Xw
      RlGED7abuLRRXSmXKb127YGHQs6CZcS7a7fbFdHxZXZJ+tQtK8705Pu1LGsuhZxp6UQQBGJe
      G3cdYDYIj0L09bdv440PGji3lseTG45Ic2c3N5lwwzAUEWhVwquag6xW0wiWBa08oV5ek6Wr
      vRloot7NkLcKTYsng3Cc6jJII3ISv2p7pGV5LgtN03B1q36oc08yGC3f607gWCYcyxAuwoP0
      03EcB81mE1tbWwBmdlcQBGi1WmI3kOeQEazb5fxl27aFaxOYDdb+0+/fwjfeuI16KYf/6tc+
      DdeZFcOrDMvr+L4v3Km8n7SOJFSrXdcVCYD8nF2u1WqxpRmA/mT245TnR/FGqMYUCgVRbM2q
      frlghccya48PwVB+tVpNbFc06PabePi4gvr7k1txkldrNEU+n09EdpvNZsIw1HVdlCeSSeT5
      CWmgGpyG6XQqrhNFkYgzqK7KX/7UFq5slVArOsjZs/6r9DwOBgMRWxj7AX7vu7fxhRfO48KF
      muhlynvJ2sWbzSbW1tbAhm/B/ZlnPF5egwP1+7BtOy5+aLVQLscJUHR9yTqWrFMWCgWRTCXr
      irQjqMPJKpEs4RlK5wIy/fW0NK89bnDcKzMe06rdoigSmZC5XA5v7fh4eiNWVXZ3d3Hp0qU5
      1eWgcBxHeGDSkMvlMBwOkXdz+NSTVubwPtYod7tdtEcR/uwHt3Bps4wXn9ZRLBZFtjKAhAdS
      VoWq1arodKhpGnTDwP/z9XfwxEYRn3n2nDj/QDYAwSCZZVlC0lNCZwW/NC3OwKNaRO/SQRd7
      MBig3++jUCis3GC7/aAKGc5N49qzYcB+GI/H2OtN8cRGcc7tDEBUeKXBn4YwdA26Pv/eKAhz
      uVzqLk1XKe91WQzGPspFF5X7hTDsYAgsrjbsdDoicjycTPGf/aOv4/r5Cv7+3/44giBAt9sF
      cAAViIiiuGPDaDQS3hgAiYqbNAnEHcG27UO7LhlYyQrorDJUlzP7psq1HFQdFiGXy+GJ+y77
      g6qTX/n2+/jYkxu4tpUeGOv3+9je3kapVEI+n0+kHjAOwR1/WSYo5CwEUudAtsZn6S6Na3lS
      EBAnwrVarbgu3DHx3/4Hn0fONoStwTLKA1uTTDWtVqsiZ0Pu8JuVshBF8SC6Xq8nBiUcFHKQ
      5nEFpSD1cU48pPeGKSyHARuGZeHf+sKTmcQPzMamRlGE/+/bt8Q7Jx0wSJfL5Q7shftwu4X/
      9bdfxXAUt2Kp1WqoVquibbtKa41GI7GTlVwTljGrG6Fteuief/QEeJ4nbkgupk7bXjmF8bCJ
      a5qmCR0xiiLcvNtEpZhDtbxY6q0SuOb8t6quaJqGO3fuoFKpLBxqkYYHbQHpOI5IVvu3f3pt
      LkWe1Vrs1qE2xQKAIIzw5q0Wrp4ro5Cb3c9aKYdpEOIvX/8An33pMn703jauna9i1Gvh6tWr
      qNVqwt05HA6xtbUlhCXzy6j22LYtGgg8UPYY29ZxK6b3hpmFHJwsG6+sAjos6OYCgLvNHgaj
      yT5nrA6oP3/7zXto9tKf2/M8XLhwAY7jiI7OB0E+n0er1Vp6tnAaSPRp7mqqymzCrOJbb9zF
      //DPv4t/+qdvJj7XNODXfu45fOx6Hf/nH76Of/h/fQv//f/9LWi6kZgZx12IHcAZ8aXd2el0
      EuN1D83y9NGyPw8LnSuVCnZ3d7G9vR1HjfNreHdniBe34p+ybRvnz58/8O+p6RWGYeCzL109
      7O2fSrDW9TPPbcUNoPR5QcKJl0z57XQ6IjdmGdB/3+/3MZlMhLubqsthS07ZpZup0dTne70e
      JpOJiP1cOVfBUxereOnq+tw1TEO/PzMgEKW1hUIB7XYbpmlmD+mQnu2JJ55I7DwH9gLtBxoZ
      w+EQuq5juz3GG7da+PJHLog0Cg67XhaMCPLljsdj8YLThli0u3EFUaV0OodepyGK4gIVSi6m
      LahgGxq5CZU8pnSR84HeEdd1BaEPBnGzXCZGUtipQU72+UwLfuZyOVFgxZ6i1WoVrutiPB6L
      ZLhlHSPeNMA7tzvYrDgo5y3xm7RPFwVKGaNge8wj7/vNnYGG2mbFwVbtQqLOd5Efn2rSdDqF
      4zjCiGI1D3P/qesxV0Q2tporyACtVkuE8hchzfZiMTuntqdJyX6/jyAI5uyzQqEgVCnuAHJ3
      BTkZrVQqZcYBWFNMplUzhoHFrXhk2KaBF66sJSbIAMtlCTAtQ/x73187BNSAlvxglOZytFc+
      r9lsCi+GXIMKIBHG5pY3GAzx1W++jZ/56EUhma5eWBeEsCqZoiS2/bI01VC//Hm1WkW73RbO
      CGCWSLdoemOhUMBgMBDpyXS1kmlYe7so9YVeKoLPIbfFz4ojZSEIQnzjJ3vYqhXwyecuLK3m
      maYpWrccSwkVff2U+PJAPE3TRN2nCg5qAGYeBRlRFOHVH9/End2ZG9VxbPzSF58TUx6HoxH+
      5LtvY6/Rwv/+1b9CpzcQ3gFuwdxlThOy5pX96EYD/ZEv/q9p2e3BdV0XLRF3dnYwGAwwHo/3
      ndoYRVHqjl0sFlEul8U0+oOo0jI9lEqlfYmXPYMajcZs+o2u460PW7i50xMdTZaFKKg5ahuA
      oMeCtaHqrkBVSZ4ZzCifaZpYW1tLbXgrW/y+7+Of/cmP8Xe+9LyYacV89jCMcGN3gBeubMB1
      c/i9v3wTz12p489e+wCfeW4Lr/7kHj7/4iU8c3nj1EyA4XruBzma+8ffv4VXntrEWmm+7ns6
      nSZshSwMBgM4jpO5TmxqddAYja7riZ2t1WqJd0vI5ZFU5eTf4lznrFTv/XBsDEAwatntdueK
      mNUqr729PWxubuJ3X72JX/83P7KvRJHjEFkVY/I96LqO7//kNp6/so7f/cZPsNcd4zd++ROn
      pp0Kde9FqoKmaZkGsgx6dmSijaII33pzG597fitxLDMps37zMAxA9YkuW17nvffeEzk83LnV
      sbXtdhv1el20XH8QHHsVOSV9vV7H5uZmokZTdqtNJhMxDebnX7kgghf7tV9M2/pUAuE9mKaJ
      T714BYVCHj/3ievwgxC397rH9/AHBFPM01SYMAxx7949NJtN7O7uivTjtD+MvfD/amMxACIg
      pbabeepCMrAmTwwFgDdvtfDjD5pz96ZiOJni1Z9sQ351sit7Op3ix7eHiXPpGi2Xy8KXb7ol
      eEEyu+DChQuoVCoPTPzAA8QBDgpa3xx1wx2A4fJut4u3dgNcNwJY4Qj9oY/2OMTldVfkmR+2
      ECbtXjbWKvjSR6/gGz/6EFfP109ER4kgCPCbv/8a/uNfemVOJ59Op6hUKvj2mzv41DPr2Nvb
      m1VS6Xqin6dqCDNtQk4DpoSVVVNN07BeziWcB/1+P+EZOlfLIwpnlX5UcdWItD8NsNcdIUIE
      RMm+TgyGXlzLi3QaDitxXVcwnKZpeOvDFtbLLq6frwiv4FGqrMeuAi2DKIpEueV2q4dmd4KK
      EyDSHURevEDcQY4S7W4f/+O/eBX/+a99UdTJPkpwy0/zibPqyw8A29REl+M0O0m+XqfTEbo2
      O7jJtRZ0N6tgvYCq2shMA8xy71XdXT5GPcfzPHQ6nUSdcqlUwsbGBnq9nlDz+E6YOn8c7+dE
      WH/0BERRhGmkI+dM4JqxTVBf30CjOzpwDS/tAxKTKjWiKMKHux1cP1/Bv3r1bfzsK9dRyD/a
      RLu0+yTCMMSdO3fQ9HK4vFlCMRcTg+d54hyZAIfDIQaDAdbW1vDOvQEu2rMuafLsZNM0hfHJ
      nUPeHRizSdshgyAQ3iEy736g86JWqyX88ePxGDs7OyLgZtu2KK09Tlf2iWAAQtM01Ksl1Ksl
      oRr50ynagxCXzy93q9QvPc/DH37nPdza7cF1LPxHv/hKQoIEQYBX37iDf/fnXkqoECcVbFMz
      bHu4udvDxbImglsMAlIN4eA4Tn6/vddHtWDjXDUedXTnzh1YliV2VNV4laV1t9sVzgkVdGln
      Na+Sr8dh2MPhcG6XozHOmpGsnf444jon9q1rmiZ8zJfq+0sBJuB5noednR1cvHgRX/7YJQRB
      kGgNyL91Xcff/dLzB/ZfPyrYto3Lly8jn98T0lbXddxrj1GtuqJckH3519bWRFrKJ68VMZ0O
      sbMT19xy8J2MtAgyDWk5BiAfwxbk9MRlQTbK+/2+uDeVoH/04QCfuh8/4v3wXNY/HDTDdT+c
      WAYA4pfiui5+/EEDf/Hjn+Df+RsfzdQD6SLs9/uoVCqi0SoQG3LMTWKPSE3TcGtviGZ3hC9/
      8umH+ViHBjtidDodkaz24d4QW9UcisUidnZ2xGBwEmoURWKuWrPZxCTQ0dwboWzKerkGLwhh
      KVoO+2rSZanm3He7XWxuborcehbkUM1hklsUxbPG7t69i42NjcS9yRkCn3yqLgYZcienMXxc
      gupEMwAQJ1J96oXLePZSH++++y6uXLmCMAxFQ1eO+yGxM6gmSy26AwGIkHsURThXNvHUxQun
      KmWCBUiNRgM938Qzm5bQ29kkmCnpuq6LJseGYdxXlQLkXB2OUxSE2B97+J1v3cCv/ewzCeLk
      bDemDVBqyy3Jedx0OsXa2ppoqkW7TnZJ09PD9R5PI9xtdHF9K1ahaEizqkzW/9VUiiNbzyO/
      4jHAsW2sVWO/8F+/v42vv35TzKy6ceNGopEvK9Xk7scEF1h2AzabTdy8efOBumA/bGiahq2t
      LbT6cerI3bt3xY6naRq+/uNtvPFhL/G8uVwOnu6iN4kNXZmYCo6Bv/flpwWB08NUKpXi7gz3
      s0D7/b5oXcIWI1xzZlkWCgVRjGOYJqDFJMZGtfIz3GkM8LXv35qzBUqlUtzdotXC3t6eCGIe
      RzOzU8EAQJy7sbm5iY88fRFffuV6IpWCEyNl9Ho9UQFERFGE3//OTfzFj+6K/7PAn/kspwGa
      Freo+cQz5+OmVbUNtPsTrK2tAZqOr//oNr7z1rZoT/72nS5+dKOJkmujVLBT0wbop2eJpTw0
      Xd5VmTdkGAb+32/eEMZstVrFcDhMFNJ8uDfEP/qDv4amaSLlgdVsURThqfNl/MYvvJhof8jn
      KxQKiTYucrbvka7lSYgDPAg42C/LTcfeMAyi7PV8WIaGSt4UBhzdbRyzJLduOentV6bTKd66
      uY3haIK8Nka9XocXRNA1Df4kzhti3QQDUMz8ZF48wd76dMfSy5OV5sCCdNVrJApTNA3eNIRt
      JLs1yCnRWUKHnqxqtQrTNOfSIY4KJ94GWASOu+RL5MsLggCj0QjFYlEU0ZCQ10szgjZNE81m
      EyF0fP3NBj57LS/8081mU4Tk5dZ8Jw2maeK5q+fR6XSws7MDXddRK7j3ibMoJj+mTdBh6gmN
      VVnNuNUY4VI9L3R2gjYAk9A4CE82WOnyTOsTZBgGGo1GZlFUnMgYCuM9iuKxqMcVqT/VO0Cr
      1cJwOMTe3h5M00Tbs/Ha+038wsdjzwTL+ViuaZpmoq+MbdsolUqiTUan00G5WsNr7zbw9KaF
      xlCDHwR45mIV586d2+duHi3koNVBmFVWPRihDaMIX3vtDn7m5fPQEYrsUq5dvV4XQoaEKoMZ
      uWxXzojveDzG5uamSNgDYsOYiXlhGMajS6WYDHtAHZcAOtUMQGONeqcfAJ2hj42ynXixw+EQ
      QFwZxbQLBm90XUev10OhUECv1xOZiPRXs/KJL25VQQO43++LvCFKfjZGPnfunMg0XXYtuBtM
      Qw2GFuf0b2xsiDQMtsOkEPrhB228cLkGQ4slvzrX4KhxaoxgFTRg5fx4ywDqRVMQv+d5YiYs
      1aQoihKFNwyyMOux2WwK/zfzVRjAOS1G8mFA9eXWThcf7g3Q7Xaxs7Mj1Ex5CuVBCfJea4j/
      4h9/E9Bjg5n1waZpimxeplt8/Ml12GY8Gum4iR84pQzAAvFGoyFC62rCFTDrWFwul+G6LprN
      Jnq9HjY2NhL6cLlchud5qFar2NraQqVSEWm51IlXtRud5/m4uzvzgJVdE+vluJMb9fharYad
      kT1Xw7EfmHd0Yb2E/+4//Dy88WiWEg0N//CffQ87nXl3da1Wy+wdetQ4MQxAHXAZUP+sVCpi
      juzdu3dTe9mwhyizDev1+pwxqOv6wpaC9AaNRqNTFS9YBmPPx5s3d8X626aGfM7Cm3cGicDV
      uZqbGHonI4tQwzCMGxZYFrY21oQ3J4oiIArxG7/wIjbKTuI69Po8LJwYBliW2xly1zQNf/r9
      beTzeRSLReTzeeHRIBjE4XnMXWEy1jLptUzH5axZFqRwlvJpV4vKxTy+/ImnhcHK3fRCLS86
      QQRBgKqrYzgcznl1dF3Hb3/zA4z9+XUYBSYazZaYJxwEgYhMA0AlbwGYDTxn9Pdh4tQZwVR/
      mM/j+75w9ZmmKRaY27U8zikN1PGB+flStA8IOaGO/2eawCpMqgzDEI1GQ3iDON1lc3MTnU5H
      tLdXmb7R91Ev2gCSiXL/+o09fPz6Gp7YissXOa6p3++LQRgs4CmVSoduuvUgOHVxALnwotvt
      CslB4mOBSBiG2N7eFtNOFkHOc1nULULOk+G9sNEvCzsA7Ntl4aSCXSNu376N6XQq0qnl79NQ
      L8aSXIZpmvCCEK4FUfXFz5nzz5kRxWLxkRA/cAoZIAxD3L0bpzKwTFAFy/TkAQpZOIhOr+4A
      6n3Rhmk2m6hUKqeykzVTTkzTFCnT8uSYLJUv7bsvvbAumijLSXHM7GSkfmNj41D3+sb79xBF
      EV64fvBWm8SpYwBN00RhRRqBDQYDmKaJSqWSOejhQbCsF6TT6STu5TSpR5zRJdfqUiXMwiJb
      iMzxjTd28MKVNVTceKdk4ttho7xr5QcXMKeOAYDYs0NjTR3D6vv+vkMiDouDEjEN7kWjg04q
      Njc3RXyERSmcHklmkG2hNAaQB6FrmobLmwW4atEBDl/pda7+4ALu1DGApmkiA5TeIDlieVy6
      5INI8NPoOmWjWUbR6XxgBw8SbVZH5iiKRD9Q5mFdXJt3RoxGo2MTWMvgxLhBD4pCoTBXrG1Z
      VmodwFEgiwHSAnAqHnW3icOA1Xjq/zlor1ariRYmaRiNRiJ3SH0najuWmskojwAAC0RJREFU
      R4lTtwMQzIlndRIlkmmawutgmqbwxjBBi23VD/pbh73Hg8xLPmlQGZsTO+Xvs5h/Op2KfCvP
      87C7uwvbtkViG9eUKSiPSkic2h0AmJXYyVKkUCiIz0ejEcbjsRggVywWRUrDIqKWr6dpGra3
      t9FutzGZTOB5nshClY9JA6eVnCYDWMZ+TajY93+/ZsO2bYsIr9rblO1eyEiLOgEeB041A7By
      SNM0Eaml+zOK4okmbLXBIgy50ilr+1VfANs0/tWNHhpdT3zGe0iDXEt7WsHA4H7fj0YjNBoN
      tFot9Pt90d5RXhsa0ZPJBJ1OB+12G61WC71eT6haQRDgq998MxF8PG6cukiwCtb1cjL91364
      jY9cW4c+aWNrawvtdjtRgTQej0UBSNqsYbr85OgwXyRrYPfLWeK1j6J35aME06D5vHs9H9Mw
      wlZlNrfB8zzRyIq+fe667GLBdWe0XPYeUW2t1+sAOG8Y+OG79/CJ5y8J4cO6jqPGqbUBCO4C
      JNif+9ileBxmlJtz1dGQY0t2jheV89tpS8jnEct6c/L5/Kkn/jAMRZSbNlbJNRGEyRaH9LzR
      NuDYUsMwEhm0URThBx908MKFvKgp/u47DXz6mY3ErAAy0ZWtqvjd4XAo6puPWp089QwAQCxo
      EARwzPsLpM06PwDzvSoZoGKGp2rcPchCn1adXwZjGDLitU0+m2XFM7rCCGj2PdSLlhA0juOg
      3++LY6+v6cJJUS6X8cR6IaH7U90yDAOb9VmXO17jONrXnF4FVQJ75ajeFtM0EwGotAXUNO3I
      p8Wc9gxRAIk1kdurqH/4fYR4ICJVSHkmRLFYFC1WqN9HUYTN+5V7TECUwTYrrVZL/MZBR74u
      g5VgAABConM+LAnb87zZrDJNx+9+52aiqonzqfb29g7926o78DQbvoSaCZsGjsgFAFOP8NLl
      WGp7nofRaCSmuff7fQwGAxiGIca2EmmpImyUy+F8DKodR6r0qTeC00C9sdlsJvrbU19lBwOZ
      cH3fFyM8ZajhflW68zPZblhbWzu1vn+CBUYqE3D6Oz1ALC+lWsn1VXt4sl0KO9aZpolyuSyE
      lYx2u50oboqiCKVSKdVp8aBYCRtABYNkajcyy7IyyyfpolPzWtTj0vJeZOJXg0WnFWtra3GH
      iAy1g04EdtvI5XJivhsdAL1xgLxjwNAg1p1p47VaLXOd0lrZH1egbCUZAJh1l2bLQO5yMvGy
      nhhAoi/+omuq11Cl10EGPp9k0K3JliVpYPc2QtM0jEazWQ7N3gS26cIwZzUcclAsC1y/H7zf
      wrOXqsiZi9sisnP0YXbdlWUAAHPNVeUXyXbdVHnCMESv18s0lJchak3TjmWbfhTgLjqZTMS6
      ydVzaWBjMvYRurIxcwXzGq7rLiR+Oc7yylPrYjxWml01Gk/g+VO8fWsPfhDicy9fO/Bznn5r
      bR/Q88CJMYTv+wmJQU/HfoS+aIdgi8VVAacw0kvzW19/N5UQO0Mf4X210jRN4erkWg0Gg0QX
      70VrOJ1ORZoJ1SamYKtodge4vdvBJ56/jM+8eOVQz7g6bysFNLjkdn7D4VBsmZT+jEYahoF2
      uw3DMERbPn6vGrvqS2Sj3lWD67qYTCbwfR+/+oVrovKt0+nEzXgB3GmOcO1cCbn7Kn0ul0vU
      FDNYCcyGZWTp9Hw3BINjabi4uYaLm7PjDoOVZoDhaIJ/+Zfv4lc+dxXtdlsU0gCzwXxRFLfk
      /su/3sazT1SxVo37adLbIUMtiWSOEV/mKuj+KkjAKtPL42mff2Lm8fF9X0yoIdQu3YvWSZ4R
      DMRq7HG6lVdaBTINDX/z89fQ6XSEBJJtAhbTt9ttvHKtjLViLMIcx0GzGc/CpU7Kv9nRbGNj
      QzTSXdZGWCWkqTHsoKe6QOW12c9JoKqhaW7So8TKMoAcYmdjK1mNIRzHQaVSSeS+cID0dDpN
      uEy5W6ytra2Mt2c/ZA2m6PV6AGKdvd1uizaUjLnIuwbdmOVyGfV6fd91K5fLYmj2cVeLrSwD
      ZCFt8TUtHr9DVYbGHFUkmQkeVsu+kwS55QufncMuer2emEHGvkHyFJ4g0nGzFc8XWKbNPEte
      6/W6uN5xYmVtAHaCYwGGnN5MyP+m50EO/lC9WabscZXBdZCbYjFwWK1WRfIbiVU+TteAc7XY
      kD6JLuKV3QHYGNfzvDnvDLdnWd8sl8uoVqtCHSqXy6Jlh1oh9riBtdd7e3uCuE3TnOveLKuK
      MwaIsFF29p0l/KiwkgzATMJerycm0KdVeQFJZgBi3XZtbS0xAZ3HVyqVlfLzLwsGxYrFIrrd
      LobDIQqFQqLYnTsuAIzGHj642xJ5RPl8/sSmh6zs26TXJiu9Qf6cUozqD/VduT6VOS6P4w4A
      xC5f1k8As+RBTuJhEzDbthHCQN+DaKz1MPr8HxYruQMAEBNI0hLXdF0XzXRlsBsyWwLy3Hw+
      L3TdxxXU8+X/c+CebsT9PjmHwTKAZy4URdv5k7xuK8sAQCy15GgkMFN5BoOBmD+raXENsGma
      cF0XhUIBrVZL9MNftRSHw8KyLMEEuq7HNlao4x/81uvww6RtwJGqJ1X1IVa2HqDdbosJMtPp
      VOSpR7qN3iTERtEQga0gCOLxop6HUWiinLdhGxparRYuXLhwYg24R4HBYIBerye6PziOg3Fo
      wIo8kV9Vq9VOTVOAlRVrDGSRsKMogud5uN0F/uqdBv69n7kugmLj8ViMVR0Pp6LTtyzxzhCD
      O6g8w6scRdC0oogXFAqFU1MQtJI7gO/7aLVaaDQaIjJJyL59GUy6Yk8bIJ41cFpe5MOCHDFn
      8Y9cDHTaykFXbgeIokgUcaTp7WlJbjzPMAzU6/VE+P4MSei6nkh3OO04Xey6JNgdLg2LIrqs
      Q5VD/2eYxyol/60UA1DPZ71qmvG6KK2BXc3O8PhgpRgAgEhgWyTBGeBKa2eyavbQGRZjpWwA
      VnZxF8iCTPgM6LCi67QZcWd4MKwUAwCzBrbL6PBra2tzyW5neLywUm+eHiDP8/Z1XzIGcNqJ
      fzSe4Htv3Hys07UfBCu1AzAj0ff9zOgtq71WRfLblomnn6g/6ts4tVgpBgBmvWmy/P22bT/S
      oWxHDcMwUC6tzvM8bJx+ESjB8zwYhrHQAPY8LzHe6AyPN1aKAYD922iw0dIZzgCsGAMw9cG2
      7cyA1sMotD7D6cHKUEIURRiNRvB9H5PJZK4ZE3CW4nCGeayUERwEgWh4qybCscfMquSwnOFo
      sDIMMJ1Ohdrj+36CAdib8oz4z6BiZVQg1vNyrKas6nBizHHMmDrD6cbKMIBcmDGZTOZqUXu9
      nih2P8MZiJVgAHZ6ZsuOtEIYdig4wxlkrAQDALMRR4PBYC4PSNf1lRhcd4YHRxiGmEwmQh1e
      CQaQk9rUQBfTnc/ampyBkGcgrwQDALNp8XI3N2A2h/YMZwBmqrBo5PuI7+fIQAnPMUdELpfb
      V/pHUZTaRe4Mq4+VYQD2lae/nx3fFrk+mT7d7XbxT/7wtcQQvTM8HliZvkBhGApPEOdUaZoG
      27axtbWVaQAHQSC6w2WN4zzD6mJlLEM2vA2CAI7jiKS3fr8/NxJVhmEYMAzjxPewPMPxYKXE
      Hau8ptOpKIjhrIAznCENK8cA+XwejuPANE3R/HYwGOw7oPmocWZYnw6sjApEsD/lYDAQLRL7
      /T6CIMDa2ppwgR13YhwN8UVDoc/w6LEyRrAKdodmZDgMQ+EhOssKPQOxcjsAwfm2nA98Rvhn
      SMPKMgBxRvhnWISVMoLPcIaD4owBzvBY44wBzvBY44wBzvBY44wBzvBY44wBzvBY44wBzvBY
      44wBzvBY44wBUnCWwPb44P8HFow3ZxsGKncAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
